#ifndef QUEBRADO_H
#define QUEBRADO_H

#include <iostream>
#include <iomanip>
using namespace std;

class Quebrado
{   
    private:
        int numerador;
        int denominador;

   public:
        Quebrado (int, int);
        Quebrado ();
        void DefineNum (int);
        void DefineDen (int);
        int DameNum (void);
        int DameDen (void);
        Quebrado operator+ (Quebrado &);
        // la referencia es sÃ³lo por eficiencia
        void imprimirObjeto();
};

Quebrado::Quebrado (int n, int d){
    this -> numerador = n;
    this -> denominador = d;
}

Quebrado::Quebrado(){
    this -> numerador = 0;
    this -> denominador = 0;
}

Quebrado Quebrado::operator + (Quebrado &Q)
{    return Quebrado (numerador * Q.DameDen()+ Q.DameNum()* denominador , 
                      denominador * Q.DameDen());
}

void Quebrado::DefineNum (int n){
    this -> numerador = n;
}

void Quebrado::DefineDen (int d){
    this -> denominador = d;
}

int Quebrado::DameNum (void){
    return this -> numerador;
}

int Quebrado::DameDen (void){
    return this -> denominador;
}

void Quebrado::imprimirObjeto(){
    std::cout << this ->  numerador << std::endl;
    std::cout << "\\" << std::endl;
    std::cout << this ->  denominador << std::endl;
}


int main(){

    Quebrado A(2,3), B(5,6), C, D;
    C = A+B;
    C.imprimirObjeto();
    return 0;
}

#endif 